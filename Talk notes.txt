Slide 1
- If you're like me and you program in both R and Python, the R reticulate package may be one of the handiest packages to come along in some time
- I've actually been running python from R for some time now through code chunks in R markdown documents, where
I simply add the code chunk knitr parameter engine='python' and provide a path to my python executable, and that works to create a reproducible document
using both languages, but as you'll see in this overview reticulate adds lots of functionality and allows really powerful integration of R and Python

Slide 2
- I'm going to move into an R notebook and just do some live demos of the main features and approaches to using reticulate
- reticulate uses a Python engine for RMarkdown that lets you run Python chunks in a single Python session within your R session and you can share objects
  between R and Python and vice versa

Chunk 1 & 2
- To get started, load the reticulate library, and in an RMarkdown document or notebook, create a Python chunk, write your Python code, and run the code chunk
- Just as with r code chunks in RMarkdown, you get shared variables and state between Python chunks

Chunk 3
- We can directly import Python modules in R and access module functions and data via the '$' operator, for example to use Python os module to list directories